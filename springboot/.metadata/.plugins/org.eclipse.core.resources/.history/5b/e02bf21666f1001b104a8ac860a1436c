package com.app.FlightAdmin.Controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.FlightAdmin.Constants.ResponseMessage;
import com.app.FlightAdmin.Model.BookFlight;
import com.app.FlightAdmin.Util.ResponseMessageUtil;

import io.swagger.annotations.ApiOperation;

@RestController
@RequestMapping(value = { "/report" })
@SuppressWarnings("static-access")
@CrossOrigin(origins = "http://localhost:4200")
public class ReportController {

	private static final String TOPIC = "bookflight";

	@Autowired
	public ResponseMessageUtil responseUtil;

	@Autowired
	public ResponseMessage message;

	@ApiOperation(value = "Fetch Bookings from kafka", notes = "Get all flight Bookings from kafka Producer")
	@GetMapping(value = "/")
	@KafkaListener(topics = TOPIC, groupId = "group_id", containerFactory = "userKafkaListenerFactory")
	public ResponseEntity<Object> fetchBookings(BookFlight bookings) {

		Map<String, Object> res = new HashMap<>();
		try {
			List<BookFlight> result = new ArrayList<>();
			result = this.dao.fetchBookings();
			res.put("bookings", result);
			return new ResponseEntity<>(res, HttpStatus.OK);
		} catch (Exception e) {
			return this.responseUtil.errorResponse(e, message.SERVER_ERROR);
		}
	}

}
