{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys } from 'primeng/api';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\n\nfunction ConfirmPopup_div_0_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r2.confirmation.icon);\n    i0.ɵɵproperty(\"ngClass\", \"p-confirm-popup-icon\");\n  }\n}\n\nfunction ConfirmPopup_div_0_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ConfirmPopup_div_0_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.reject();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r3.confirmation.rejectButtonStyleClass || \"p-button-text\");\n    i0.ɵɵproperty(\"icon\", ctx_r3.confirmation.rejectIcon)(\"label\", ctx_r3.rejectButtonLabel)(\"ngClass\", \"p-confirm-popup-reject p-button-sm\");\n    i0.ɵɵattribute(\"aria-label\", ctx_r3.rejectButtonLabel);\n  }\n}\n\nfunction ConfirmPopup_div_0_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ConfirmPopup_div_0_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.accept();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r4.confirmation.acceptButtonStyleClass);\n    i0.ɵɵproperty(\"icon\", ctx_r4.confirmation.acceptIcon)(\"label\", ctx_r4.acceptButtonLabel)(\"ngClass\", \"p-confirm-popup-accept p-button-sm\");\n    i0.ɵɵattribute(\"aria-label\", ctx_r4.acceptButtonLabel);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nconst _c1 = function (a1) {\n  return {\n    value: \"open\",\n    params: a1\n  };\n};\n\nfunction ConfirmPopup_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"@animation.start\", function ConfirmPopup_div_0_Template_div_animation_animation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onAnimationStart($event);\n    })(\"@animation.done\", function ConfirmPopup_div_0_Template_div_animation_animation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onAnimationEnd($event);\n    });\n    i0.ɵɵelementStart(1, \"div\", 2, 3);\n    i0.ɵɵtemplate(3, ConfirmPopup_div_0_i_3_Template, 1, 3, \"i\", 4);\n    i0.ɵɵelementStart(4, \"span\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 6);\n    i0.ɵɵtemplate(7, ConfirmPopup_div_0_button_7_Template, 1, 6, \"button\", 7);\n    i0.ɵɵtemplate(8, ConfirmPopup_div_0_button_8_Template, 1, 6, \"button\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.styleClass);\n    i0.ɵɵproperty(\"ngClass\", \"p-confirm-popup p-component\")(\"ngStyle\", ctx_r0.style)(\"@animation\", i0.ɵɵpureFunction1(12, _c1, i0.ɵɵpureFunction2(9, _c0, ctx_r0.showTransitionOptions, ctx_r0.hideTransitionOptions)));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.confirmation.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.confirmation.message);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.confirmation.rejectVisible !== false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.confirmation.acceptVisible !== false);\n  }\n}\n\nclass ConfirmPopup {\n  constructor(el, confirmationService, renderer, cd, config) {\n    this.el = el;\n    this.confirmationService = confirmationService;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.config = config;\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n    this.autoZIndex = true;\n    this.baseZIndex = 0;\n    this.subscription = this.confirmationService.requireConfirmation$.subscribe(confirmation => {\n      if (!confirmation) {\n        this.hide();\n        return;\n      }\n\n      if (confirmation.key === this.key) {\n        this.confirmation = confirmation;\n\n        if (this.confirmation.accept) {\n          this.confirmation.acceptEvent = new EventEmitter();\n          this.confirmation.acceptEvent.subscribe(this.confirmation.accept);\n        }\n\n        if (this.confirmation.reject) {\n          this.confirmation.rejectEvent = new EventEmitter();\n          this.confirmation.rejectEvent.subscribe(this.confirmation.reject);\n        }\n\n        this.visible = true;\n      }\n    });\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  set visible(value) {\n    this._visible = value;\n    this.cd.markForCheck();\n  }\n\n  onAnimationStart(event) {\n    if (event.toState === 'open') {\n      this.container = event.element;\n      document.body.appendChild(this.container);\n      this.align();\n      this.bindListeners();\n    }\n  }\n\n  onAnimationEnd(event) {\n    switch (event.toState) {\n      case 'void':\n        this.onContainerDestroy();\n        break;\n    }\n  }\n\n  align() {\n    if (this.autoZIndex) {\n      this.container.style.zIndex = String(this.baseZIndex + ++DomHandler.zindex);\n    }\n\n    DomHandler.absolutePosition(this.container, this.confirmation.target);\n    const containerOffset = DomHandler.getOffset(this.container);\n    const targetOffset = DomHandler.getOffset(this.confirmation.target);\n    let arrowLeft = 0;\n\n    if (containerOffset.left < targetOffset.left) {\n      arrowLeft = targetOffset.left - containerOffset.left;\n    }\n\n    this.container.style.setProperty('--overlayArrowLeft', `${arrowLeft}px`);\n\n    if (containerOffset.top < targetOffset.top) {\n      DomHandler.addClass(this.container, 'p-confirm-popup-flipped');\n    }\n  }\n\n  hide() {\n    this.visible = false;\n  }\n\n  accept() {\n    if (this.confirmation.acceptEvent) {\n      this.confirmation.acceptEvent.emit();\n    }\n\n    this.hide();\n  }\n\n  reject() {\n    if (this.confirmation.rejectEvent) {\n      this.confirmation.rejectEvent.emit();\n    }\n\n    this.hide();\n  }\n\n  bindListeners() {\n    this.bindDocumentClickListener();\n    this.bindDocumentResizeListener();\n    this.bindScrollListener();\n  }\n\n  unbindListeners() {\n    this.unbindDocumentClickListener();\n    this.unbindDocumentResizeListener();\n    this.unbindScrollListener();\n  }\n\n  bindDocumentClickListener() {\n    if (!this.documentClickListener) {\n      let documentEvent = DomHandler.isIOS() ? 'touchstart' : 'click';\n      const documentTarget = this.el ? this.el.nativeElement.ownerDocument : document;\n      this.documentClickListener = this.renderer.listen(documentTarget, documentEvent, event => {\n        let targetElement = this.confirmation.target;\n\n        if (this.container !== event.target && !this.container.contains(event.target) && targetElement !== event.target && !targetElement.contains(event.target)) {\n          this.hide();\n        }\n      });\n    }\n  }\n\n  unbindDocumentClickListener() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n      this.documentClickListener = null;\n    }\n  }\n\n  onWindowResize() {\n    this.hide();\n  }\n\n  bindDocumentResizeListener() {\n    this.documentResizeListener = this.onWindowResize.bind(this);\n    window.addEventListener('resize', this.documentResizeListener);\n  }\n\n  unbindDocumentResizeListener() {\n    if (this.documentResizeListener) {\n      window.removeEventListener('resize', this.documentResizeListener);\n      this.documentResizeListener = null;\n    }\n  }\n\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.confirmation.target, () => {\n        if (this.visible) {\n          this.hide();\n        }\n      });\n    }\n\n    this.scrollHandler.bindScrollListener();\n  }\n\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n\n  unsubscribeConfirmationSubscriptions() {\n    if (this.confirmation) {\n      if (this.confirmation.acceptEvent) {\n        this.confirmation.acceptEvent.unsubscribe();\n      }\n\n      if (this.confirmation.rejectEvent) {\n        this.confirmation.rejectEvent.unsubscribe();\n      }\n    }\n  }\n\n  onContainerDestroy() {\n    this.unbindListeners();\n    this.unsubscribeConfirmationSubscriptions();\n    this.confirmation = null;\n    this.container = null;\n  }\n\n  restoreAppend() {\n    if (this.container) {\n      document.body.removeChild(this.container);\n    }\n\n    this.onContainerDestroy();\n  }\n\n  get acceptButtonLabel() {\n    return this.confirmation.acceptLabel || this.config.getTranslation(TranslationKeys.ACCEPT);\n  }\n\n  get rejectButtonLabel() {\n    return this.confirmation.rejectLabel || this.config.getTranslation(TranslationKeys.REJECT);\n  }\n\n  ngOnDestroy() {\n    this.restoreAppend();\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nConfirmPopup.ɵfac = function ConfirmPopup_Factory(t) {\n  return new (t || ConfirmPopup)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ConfirmationService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.PrimeNGConfig));\n};\n\nConfirmPopup.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ConfirmPopup,\n  selectors: [[\"p-confirmPopup\"]],\n  inputs: {\n    key: \"key\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    visible: \"visible\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngClass\", \"ngStyle\", \"class\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\"], [1, \"p-confirm-popup-content\"], [\"content\", \"\"], [3, \"ngClass\", \"class\", 4, \"ngIf\"], [1, \"p-confirm-popup-message\"], [1, \"p-confirm-popup-footer\"], [\"type\", \"button\", \"pButton\", \"\", 3, \"icon\", \"label\", \"ngClass\", \"class\", \"click\", 4, \"ngIf\"], [3, \"ngClass\"], [\"type\", \"button\", \"pButton\", \"\", 3, \"icon\", \"label\", \"ngClass\", \"click\"]],\n  template: function ConfirmPopup_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ConfirmPopup_div_0_Template, 9, 14, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.visible);\n    }\n  },\n  directives: [i2.NgIf, i2.NgClass, i2.NgStyle, i3.ButtonDirective],\n  styles: [\".p-confirm-popup{position:absolute;margin-top:10px}.p-confirm-popup-flipped{margin-top:0;margin-bottom:10px}.p-confirm-popup:after,.p-confirm-popup:before{bottom:100%;left:calc(0 + 1.25rem);left:calc(var(--overlayArrowLeft, 0) + 1.25rem);content:\\\" \\\";height:0;width:0;position:absolute;pointer-events:none}.p-confirm-popup:after{border-width:8px;margin-left:-8px}.p-confirm-popup:before{border-width:10px;margin-left:-10px}.p-confirm-popup-flipped:after,.p-confirm-popup-flipped:before{bottom:auto;top:100%}.p-confirm-popup.p-confirm-popup-flipped:after,.p-confirm-popup.p-confirm-popup-flipped:before{border-bottom-color:transparent}.p-confirm-popup .p-confirm-popup-content{display:flex;align-items:center}\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animation', [state('void', style({\n      transform: 'scaleY(0.8)',\n      opacity: 0\n    })), state('open', style({\n      transform: 'translateY(0)',\n      opacity: 1\n    })), transition('void => open', animate('{{showTransitionParams}}')), transition('open => void', animate('{{hideTransitionParams}}'))])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ConfirmPopup, [{\n    type: Component,\n    args: [{\n      selector: 'p-confirmPopup',\n      template: `\n        <div *ngIf=\"visible\" [ngClass]=\"'p-confirm-popup p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\"\n            [@animation]=\"{value: 'open', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\"\n            (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\">\n            <div #content class=\"p-confirm-popup-content\">\n                <i [ngClass]=\"'p-confirm-popup-icon'\" [class]=\"confirmation.icon\" *ngIf=\"confirmation.icon\"></i>\n                <span class=\"p-confirm-popup-message\">{{confirmation.message}}</span>\n            </div>\n            <div class=\"p-confirm-popup-footer\">\n                <button type=\"button\" pButton [icon]=\"confirmation.rejectIcon\" [label]=\"rejectButtonLabel\" (click)=\"reject()\" [ngClass]=\"'p-confirm-popup-reject p-button-sm'\"\n                    [class]=\"confirmation.rejectButtonStyleClass || 'p-button-text'\" *ngIf=\"confirmation.rejectVisible !== false\" [attr.aria-label]=\"rejectButtonLabel\"></button>\n                <button type=\"button\" pButton [icon]=\"confirmation.acceptIcon\" [label]=\"acceptButtonLabel\" (click)=\"accept()\" [ngClass]=\"'p-confirm-popup-accept p-button-sm'\"\n                    [class]=\"confirmation.acceptButtonStyleClass\" *ngIf=\"confirmation.acceptVisible !== false\" [attr.aria-label]=\"acceptButtonLabel\"></button>\n            </div>\n        </div>\n    `,\n      animations: [trigger('animation', [state('void', style({\n        transform: 'scaleY(0.8)',\n        opacity: 0\n      })), state('open', style({\n        transform: 'translateY(0)',\n        opacity: 1\n      })), transition('void => open', animate('{{showTransitionParams}}')), transition('open => void', animate('{{hideTransitionParams}}'))])],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styleUrls: ['./confirmpopup.css']\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.ConfirmationService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.PrimeNGConfig\n    }];\n  }, {\n    key: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ConfirmPopupModule {}\n\nConfirmPopupModule.ɵfac = function ConfirmPopupModule_Factory(t) {\n  return new (t || ConfirmPopupModule)();\n};\n\nConfirmPopupModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ConfirmPopupModule\n});\nConfirmPopupModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ButtonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ConfirmPopupModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ButtonModule],\n      exports: [ConfirmPopup],\n      declarations: [ConfirmPopup]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ConfirmPopup, ConfirmPopupModule }; //# sourceMappingURL=primeng-confirmpopup.js.map","map":{"version":3,"sources":["C:/Users/User/OneDrive/priyadharshini/AngularPro/FlightBookingApp/node_modules/primeng/fesm2015/primeng-confirmpopup.js"],"names":["i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","NgModule","i2","CommonModule","i1","TranslationKeys","i3","ButtonModule","trigger","state","style","transition","animate","DomHandler","ConnectedOverlayScrollHandler","ConfirmPopup","constructor","el","confirmationService","renderer","cd","config","showTransitionOptions","hideTransitionOptions","autoZIndex","baseZIndex","subscription","requireConfirmation$","subscribe","confirmation","hide","key","accept","acceptEvent","reject","rejectEvent","visible","_visible","value","markForCheck","onAnimationStart","event","toState","container","element","document","body","appendChild","align","bindListeners","onAnimationEnd","onContainerDestroy","zIndex","String","zindex","absolutePosition","target","containerOffset","getOffset","targetOffset","arrowLeft","left","setProperty","top","addClass","emit","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","unbindListeners","unbindDocumentClickListener","unbindDocumentResizeListener","unbindScrollListener","documentClickListener","documentEvent","isIOS","documentTarget","nativeElement","ownerDocument","listen","targetElement","contains","onWindowResize","documentResizeListener","bind","window","addEventListener","removeEventListener","scrollHandler","unsubscribeConfirmationSubscriptions","unsubscribe","restoreAppend","removeChild","acceptButtonLabel","acceptLabel","getTranslation","ACCEPT","rejectButtonLabel","rejectLabel","REJECT","ngOnDestroy","ɵfac","ElementRef","ConfirmationService","Renderer2","ChangeDetectorRef","PrimeNGConfig","ɵcmp","NgIf","NgClass","NgStyle","ButtonDirective","transform","opacity","type","args","selector","template","animations","changeDetection","OnPush","encapsulation","None","styleUrls","styleClass","ConfirmPopupModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys } from 'primeng/api';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\n\nclass ConfirmPopup {\n    constructor(el, confirmationService, renderer, cd, config) {\n        this.el = el;\n        this.confirmationService = confirmationService;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.config = config;\n        this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n        this.hideTransitionOptions = '.1s linear';\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n        this.subscription = this.confirmationService.requireConfirmation$.subscribe(confirmation => {\n            if (!confirmation) {\n                this.hide();\n                return;\n            }\n            if (confirmation.key === this.key) {\n                this.confirmation = confirmation;\n                if (this.confirmation.accept) {\n                    this.confirmation.acceptEvent = new EventEmitter();\n                    this.confirmation.acceptEvent.subscribe(this.confirmation.accept);\n                }\n                if (this.confirmation.reject) {\n                    this.confirmation.rejectEvent = new EventEmitter();\n                    this.confirmation.rejectEvent.subscribe(this.confirmation.reject);\n                }\n                this.visible = true;\n            }\n        });\n    }\n    get visible() {\n        return this._visible;\n    }\n    set visible(value) {\n        this._visible = value;\n        this.cd.markForCheck();\n    }\n    onAnimationStart(event) {\n        if (event.toState === 'open') {\n            this.container = event.element;\n            document.body.appendChild(this.container);\n            this.align();\n            this.bindListeners();\n        }\n    }\n    onAnimationEnd(event) {\n        switch (event.toState) {\n            case 'void':\n                this.onContainerDestroy();\n                break;\n        }\n    }\n    align() {\n        if (this.autoZIndex) {\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n        DomHandler.absolutePosition(this.container, this.confirmation.target);\n        const containerOffset = DomHandler.getOffset(this.container);\n        const targetOffset = DomHandler.getOffset(this.confirmation.target);\n        let arrowLeft = 0;\n        if (containerOffset.left < targetOffset.left) {\n            arrowLeft = targetOffset.left - containerOffset.left;\n        }\n        this.container.style.setProperty('--overlayArrowLeft', `${arrowLeft}px`);\n        if (containerOffset.top < targetOffset.top) {\n            DomHandler.addClass(this.container, 'p-confirm-popup-flipped');\n        }\n    }\n    hide() {\n        this.visible = false;\n    }\n    accept() {\n        if (this.confirmation.acceptEvent) {\n            this.confirmation.acceptEvent.emit();\n        }\n        this.hide();\n    }\n    reject() {\n        if (this.confirmation.rejectEvent) {\n            this.confirmation.rejectEvent.emit();\n        }\n        this.hide();\n    }\n    bindListeners() {\n        this.bindDocumentClickListener();\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n    }\n    unbindListeners() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n    }\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            let documentEvent = DomHandler.isIOS() ? 'touchstart' : 'click';\n            const documentTarget = this.el ? this.el.nativeElement.ownerDocument : document;\n            this.documentClickListener = this.renderer.listen(documentTarget, documentEvent, (event) => {\n                let targetElement = this.confirmation.target;\n                if (this.container !== event.target && !this.container.contains(event.target) &&\n                    targetElement !== event.target && !targetElement.contains(event.target)) {\n                    this.hide();\n                }\n            });\n        }\n    }\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    onWindowResize() {\n        this.hide();\n    }\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.confirmation.target, () => {\n                if (this.visible) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    unsubscribeConfirmationSubscriptions() {\n        if (this.confirmation) {\n            if (this.confirmation.acceptEvent) {\n                this.confirmation.acceptEvent.unsubscribe();\n            }\n            if (this.confirmation.rejectEvent) {\n                this.confirmation.rejectEvent.unsubscribe();\n            }\n        }\n    }\n    onContainerDestroy() {\n        this.unbindListeners();\n        this.unsubscribeConfirmationSubscriptions();\n        this.confirmation = null;\n        this.container = null;\n    }\n    restoreAppend() {\n        if (this.container) {\n            document.body.removeChild(this.container);\n        }\n        this.onContainerDestroy();\n    }\n    get acceptButtonLabel() {\n        return this.confirmation.acceptLabel || this.config.getTranslation(TranslationKeys.ACCEPT);\n    }\n    get rejectButtonLabel() {\n        return this.confirmation.rejectLabel || this.config.getTranslation(TranslationKeys.REJECT);\n    }\n    ngOnDestroy() {\n        this.restoreAppend();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nConfirmPopup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: ConfirmPopup, deps: [{ token: i0.ElementRef }, { token: i1.ConfirmationService }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i1.PrimeNGConfig }], target: i0.ɵɵFactoryTarget.Component });\nConfirmPopup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.4\", type: ConfirmPopup, selector: \"p-confirmPopup\", inputs: { key: \"key\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", style: \"style\", styleClass: \"styleClass\", visible: \"visible\" }, ngImport: i0, template: `\n        <div *ngIf=\"visible\" [ngClass]=\"'p-confirm-popup p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\"\n            [@animation]=\"{value: 'open', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\"\n            (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\">\n            <div #content class=\"p-confirm-popup-content\">\n                <i [ngClass]=\"'p-confirm-popup-icon'\" [class]=\"confirmation.icon\" *ngIf=\"confirmation.icon\"></i>\n                <span class=\"p-confirm-popup-message\">{{confirmation.message}}</span>\n            </div>\n            <div class=\"p-confirm-popup-footer\">\n                <button type=\"button\" pButton [icon]=\"confirmation.rejectIcon\" [label]=\"rejectButtonLabel\" (click)=\"reject()\" [ngClass]=\"'p-confirm-popup-reject p-button-sm'\"\n                    [class]=\"confirmation.rejectButtonStyleClass || 'p-button-text'\" *ngIf=\"confirmation.rejectVisible !== false\" [attr.aria-label]=\"rejectButtonLabel\"></button>\n                <button type=\"button\" pButton [icon]=\"confirmation.acceptIcon\" [label]=\"acceptButtonLabel\" (click)=\"accept()\" [ngClass]=\"'p-confirm-popup-accept p-button-sm'\"\n                    [class]=\"confirmation.acceptButtonStyleClass\" *ngIf=\"confirmation.acceptVisible !== false\" [attr.aria-label]=\"acceptButtonLabel\"></button>\n            </div>\n        </div>\n    `, isInline: true, styles: [\".p-confirm-popup{position:absolute;margin-top:10px}.p-confirm-popup-flipped{margin-top:0;margin-bottom:10px}.p-confirm-popup:after,.p-confirm-popup:before{bottom:100%;left:calc(0 + 1.25rem);left:calc(var(--overlayArrowLeft, 0) + 1.25rem);content:\\\" \\\";height:0;width:0;position:absolute;pointer-events:none}.p-confirm-popup:after{border-width:8px;margin-left:-8px}.p-confirm-popup:before{border-width:10px;margin-left:-10px}.p-confirm-popup-flipped:after,.p-confirm-popup-flipped:before{bottom:auto;top:100%}.p-confirm-popup.p-confirm-popup-flipped:after,.p-confirm-popup.p-confirm-popup-flipped:before{border-bottom-color:transparent}.p-confirm-popup .p-confirm-popup-content{display:flex;align-items:center}\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i3.ButtonDirective, selector: \"[pButton]\", inputs: [\"iconPos\", \"loadingIcon\", \"label\", \"icon\", \"loading\"] }], animations: [\n        trigger('animation', [\n            state('void', style({\n                transform: 'scaleY(0.8)',\n                opacity: 0\n            })),\n            state('open', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => open', animate('{{showTransitionParams}}')),\n            transition('open => void', animate('{{hideTransitionParams}}')),\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: ConfirmPopup, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-confirmPopup',\n                    template: `\n        <div *ngIf=\"visible\" [ngClass]=\"'p-confirm-popup p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\"\n            [@animation]=\"{value: 'open', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\"\n            (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\">\n            <div #content class=\"p-confirm-popup-content\">\n                <i [ngClass]=\"'p-confirm-popup-icon'\" [class]=\"confirmation.icon\" *ngIf=\"confirmation.icon\"></i>\n                <span class=\"p-confirm-popup-message\">{{confirmation.message}}</span>\n            </div>\n            <div class=\"p-confirm-popup-footer\">\n                <button type=\"button\" pButton [icon]=\"confirmation.rejectIcon\" [label]=\"rejectButtonLabel\" (click)=\"reject()\" [ngClass]=\"'p-confirm-popup-reject p-button-sm'\"\n                    [class]=\"confirmation.rejectButtonStyleClass || 'p-button-text'\" *ngIf=\"confirmation.rejectVisible !== false\" [attr.aria-label]=\"rejectButtonLabel\"></button>\n                <button type=\"button\" pButton [icon]=\"confirmation.acceptIcon\" [label]=\"acceptButtonLabel\" (click)=\"accept()\" [ngClass]=\"'p-confirm-popup-accept p-button-sm'\"\n                    [class]=\"confirmation.acceptButtonStyleClass\" *ngIf=\"confirmation.acceptVisible !== false\" [attr.aria-label]=\"acceptButtonLabel\"></button>\n            </div>\n        </div>\n    `,\n                    animations: [\n                        trigger('animation', [\n                            state('void', style({\n                                transform: 'scaleY(0.8)',\n                                opacity: 0\n                            })),\n                            state('open', style({\n                                transform: 'translateY(0)',\n                                opacity: 1\n                            })),\n                            transition('void => open', animate('{{showTransitionParams}}')),\n                            transition('open => void', animate('{{hideTransitionParams}}')),\n                        ])\n                    ],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./confirmpopup.css']\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.ConfirmationService }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i1.PrimeNGConfig }]; }, propDecorators: { key: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], visible: [{\n                type: Input\n            }] } });\nclass ConfirmPopupModule {\n}\nConfirmPopupModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: ConfirmPopupModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nConfirmPopupModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: ConfirmPopupModule, declarations: [ConfirmPopup], imports: [CommonModule, ButtonModule], exports: [ConfirmPopup] });\nConfirmPopupModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: ConfirmPopupModule, imports: [[CommonModule, ButtonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: ConfirmPopupModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ButtonModule],\n                    exports: [ConfirmPopup],\n                    declarations: [ConfirmPopup]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConfirmPopup, ConfirmPopupModule };\n//# sourceMappingURL=primeng-confirmpopup.js.map\n"]},"metadata":{},"sourceType":"module"}