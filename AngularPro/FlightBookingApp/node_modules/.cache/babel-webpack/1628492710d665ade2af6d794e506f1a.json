{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nconst _c0 = [\"container\"];\n\nfunction Splitter_ng_template_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Splitter_ng_template_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"mousedown\", function Splitter_ng_template_2_div_2_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onGutterMouseDown($event, i_r3);\n    })(\"touchstart\", function Splitter_ng_template_2_div_2_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onGutterTouchStart($event, i_r3);\n    });\n    i0.ɵɵelement(1, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r5.gutterStyle());\n  }\n}\n\nfunction Splitter_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵtemplate(1, Splitter_ng_template_2_ng_container_1_Template, 1, 0, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, Splitter_ng_template_2_div_2_Template, 2, 1, \"div\", 4);\n  }\n\n  if (rf & 2) {\n    const panel_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.panelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.panelContainerClass())(\"ngStyle\", ctx_r1.panelStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", panel_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r3 !== ctx_r1.panels.length - 1);\n  }\n}\n\nclass Splitter {\n  constructor(cd, el) {\n    this.cd = cd;\n    this.el = el;\n    this.stateStorage = \"session\";\n    this.stateKey = null;\n    this.layout = \"horizontal\";\n    this.gutterSize = 4;\n    this.panelSizes = [];\n    this.minSizes = [];\n    this.onResizeEnd = new EventEmitter();\n    this.nested = false;\n    this.panels = [];\n    this.dragging = false;\n    this.mouseMoveListener = null;\n    this.mouseUpListener = null;\n    this.touchMoveListener = null;\n    this.touchEndListener = null;\n    this.size = null;\n    this.gutterElement = null;\n    this.startPos = null;\n    this.prevPanelElement = null;\n    this.nextPanelElement = null;\n    this.nextPanelSize = null;\n    this.prevPanelSize = null;\n    this._panelSizes = null;\n    this.prevPanelIndex = null;\n  }\n\n  ngOnInit() {\n    this.nested = this.isNested();\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'panel':\n          this.panels.push(item.template);\n          break;\n\n        default:\n          this.panels.push(item.template);\n          break;\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    if (this.panels && this.panels.length) {\n      let initialized = false;\n\n      if (this.isStateful()) {\n        initialized = this.restoreState();\n      }\n\n      if (!initialized) {\n        let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n        let _panelSizes = [];\n        this.panels.map((panel, i) => {\n          let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n          let panelSize = panelInitialSize || 100 / this.panels.length;\n          _panelSizes[i] = panelSize;\n          children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n        });\n        this._panelSizes = _panelSizes;\n      }\n    }\n  }\n\n  onResizeStart(event, index) {\n    this.gutterElement = event.currentTarget;\n    this.size = this.horizontal() ? DomHandler.getWidth(this.containerViewChild.nativeElement) : DomHandler.getHeight(this.containerViewChild.nativeElement);\n    this.dragging = true;\n    this.startPos = this.horizontal() ? event.pageX || event.changedTouches[0].pageX : event.pageY || event.changedTouches[0].pageY;\n    this.prevPanelElement = this.gutterElement.previousElementSibling;\n    this.nextPanelElement = this.gutterElement.nextElementSibling;\n    this.prevPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true)) / this.size;\n    this.nextPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true)) / this.size;\n    this.prevPanelIndex = index;\n    DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n    DomHandler.addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n  }\n\n  onResize(event) {\n    let newPos;\n    if (this.horizontal()) newPos = event.pageX * 100 / this.size - this.startPos * 100 / this.size;else newPos = event.pageY * 100 / this.size - this.startPos * 100 / this.size;\n    let newPrevPanelSize = this.prevPanelSize + newPos;\n    let newNextPanelSize = this.nextPanelSize - newPos;\n\n    if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n      this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n      this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n    }\n  }\n\n  resizeEnd(event) {\n    if (this.isStateful()) {\n      this.saveState();\n    }\n\n    this.onResizeEnd.emit({\n      originalEvent: event,\n      sizes: this._panelSizes\n    });\n    DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n    DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n    this.clear();\n  }\n\n  onGutterMouseDown(event, index) {\n    this.onResizeStart(event, index);\n    this.bindMouseListeners();\n  }\n\n  onGutterTouchStart(event, index) {\n    if (event.cancelable) {\n      this.onResizeStart(event, index);\n      this.bindTouchListeners();\n      event.preventDefault();\n    }\n  }\n\n  onGutterTouchEnd(event) {\n    this.resizeEnd(event);\n    this.unbindTouchListeners();\n    if (event.cancelable) event.preventDefault();\n  }\n\n  validateResize(newPrevPanelSize, newNextPanelSize) {\n    if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n      return false;\n    }\n\n    if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n      return false;\n    }\n\n    return true;\n  }\n\n  bindMouseListeners() {\n    if (!this.mouseMoveListener) {\n      this.mouseMoveListener = event => this.onResize(event);\n\n      document.addEventListener('mousemove', this.mouseMoveListener);\n    }\n\n    if (!this.mouseUpListener) {\n      this.mouseUpListener = event => {\n        this.resizeEnd(event);\n        this.unbindMouseListeners();\n      };\n\n      document.addEventListener('mouseup', this.mouseUpListener);\n    }\n  }\n\n  bindTouchListeners() {\n    if (!this.touchMoveListener) {\n      this.touchMoveListener = event => this.onResize(event.changedTouches[0]);\n\n      document.addEventListener('touchmove', this.touchMoveListener);\n    }\n\n    if (!this.touchEndListener) {\n      this.touchEndListener = event => {\n        this.resizeEnd(event);\n        this.unbindTouchListeners();\n      };\n\n      document.addEventListener('touchend', this.touchEndListener);\n    }\n  }\n\n  unbindMouseListeners() {\n    if (this.mouseMoveListener) {\n      document.removeEventListener('mousemove', this.mouseMoveListener);\n      this.mouseMoveListener = null;\n    }\n\n    if (this.mouseUpListener) {\n      document.removeEventListener('mouseup', this.mouseUpListener);\n      this.mouseUpListener = null;\n    }\n  }\n\n  unbindTouchListeners() {\n    if (this.touchMoveListener) {\n      document.removeEventListener('touchmove', this.touchMoveListener);\n      this.touchMoveListener = null;\n    }\n\n    if (this.touchEndListener) {\n      document.removeEventListener('touchend', this.touchEndListener);\n      this.touchEndListener = null;\n    }\n  }\n\n  clear() {\n    this.dragging = false;\n    this.size = null;\n    this.startPos = null;\n    this.prevPanelElement = null;\n    this.nextPanelElement = null;\n    this.prevPanelSize = null;\n    this.nextPanelSize = null;\n    this.gutterElement = null;\n    this.prevPanelIndex = null;\n  }\n\n  isNested() {\n    if (this.el.nativeElement) {\n      let parent = this.el.nativeElement.parentElement;\n\n      while (parent && !DomHandler.hasClass(parent, 'p-splitter')) {\n        parent = parent.parentElement;\n      }\n\n      return parent !== null;\n    } else {\n      return false;\n    }\n  }\n\n  isStateful() {\n    return this.stateKey != null;\n  }\n\n  getStorage() {\n    switch (this.stateStorage) {\n      case 'local':\n        return window.localStorage;\n\n      case 'session':\n        return window.sessionStorage;\n\n      default:\n        throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n    }\n  }\n\n  saveState() {\n    this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\n  }\n\n  restoreState() {\n    const storage = this.getStorage();\n    const stateString = storage.getItem(this.stateKey);\n\n    if (stateString) {\n      this._panelSizes = JSON.parse(stateString);\n      let children = [...this.containerViewChild.nativeElement.children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n      children.forEach((child, i) => {\n        child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      });\n      return true;\n    }\n\n    return false;\n  }\n\n  containerClass() {\n    return {\n      'p-splitter p-component': true,\n      'p-splitter-horizontal': this.layout === \"horizontal\",\n      'p-splitter-vertical': this.layout === \"vertical\"\n    };\n  }\n\n  panelContainerClass() {\n    return {\n      'p-splitter-panel': true,\n      'p-splitter-panel-nested': true\n    };\n  }\n\n  gutterStyle() {\n    if (this.horizontal()) return {\n      width: this.gutterSize + 'px'\n    };else return {\n      height: this.gutterSize + 'px'\n    };\n  }\n\n  horizontal() {\n    return this.layout === 'horizontal';\n  }\n\n}\n\nSplitter.ɵfac = function Splitter_Factory(t) {\n  return new (t || Splitter)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nSplitter.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Splitter,\n  selectors: [[\"p-splitter\"]],\n  contentQueries: function Splitter_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Splitter_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function Splitter_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-splitter-panel-nested\", ctx.nested);\n    }\n  },\n  inputs: {\n    styleClass: \"styleClass\",\n    panelStyleClass: \"panelStyleClass\",\n    style: \"style\",\n    panelStyle: \"panelStyle\",\n    stateStorage: \"stateStorage\",\n    stateKey: \"stateKey\",\n    layout: \"layout\",\n    gutterSize: \"gutterSize\",\n    panelSizes: \"panelSizes\",\n    minSizes: \"minSizes\"\n  },\n  outputs: {\n    onResizeEnd: \"onResizeEnd\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-splitter-gutter\", 3, \"ngStyle\", \"mousedown\", \"touchstart\", 4, \"ngIf\"], [1, \"p-splitter-gutter\", 3, \"ngStyle\", \"mousedown\", \"touchstart\"], [1, \"p-splitter-gutter-handle\"]],\n  template: function Splitter_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, Splitter_ng_template_2_Template, 3, 6, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.panels);\n    }\n  },\n  directives: [i1.NgClass, i1.NgStyle, i1.NgForOf, i1.NgTemplateOutlet, i1.NgIf],\n  styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;-ms-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;-ms-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Splitter, [{\n    type: Component,\n    args: [{\n      selector: 'p-splitter',\n      template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div class=\"p-splitter-gutter\" *ngIf=\"i !== (panels.length - 1)\" [ngStyle]=\"gutterStyle()\"\n                    (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\n                    <div class=\"p-splitter-gutter-handle\"></div>\n                </div>\n            </ng-template>\n        </div>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styleUrls: ['./splitter.css'],\n      host: {\n        '[class.p-splitter-panel-nested]': 'nested'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    stateStorage: [{\n      type: Input\n    }],\n    stateKey: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    gutterSize: [{\n      type: Input\n    }],\n    panelSizes: [{\n      type: Input\n    }],\n    minSizes: [{\n      type: Input\n    }],\n    onResizeEnd: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container', {\n        static: false\n      }]\n    }]\n  });\n})();\n\nclass SplitterModule {}\n\nSplitterModule.ɵfac = function SplitterModule_Factory(t) {\n  return new (t || SplitterModule)();\n};\n\nSplitterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SplitterModule\n});\nSplitterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule], SharedModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Splitter, SharedModule],\n      declarations: [Splitter]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Splitter, SplitterModule }; //# sourceMappingURL=primeng-splitter.js.map","map":{"version":3,"sources":["C:/Users/User/OneDrive/priyadharshini/AngularPro/FlightBookingApp/node_modules/primeng/fesm2015/primeng-splitter.js"],"names":["i0","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","Output","ContentChildren","ViewChild","NgModule","i1","CommonModule","DomHandler","PrimeTemplate","SharedModule","Splitter","constructor","cd","el","stateStorage","stateKey","layout","gutterSize","panelSizes","minSizes","onResizeEnd","nested","panels","dragging","mouseMoveListener","mouseUpListener","touchMoveListener","touchEndListener","size","gutterElement","startPos","prevPanelElement","nextPanelElement","nextPanelSize","prevPanelSize","_panelSizes","prevPanelIndex","ngOnInit","isNested","ngAfterContentInit","templates","forEach","item","getType","push","template","ngAfterViewInit","length","initialized","isStateful","restoreState","children","nativeElement","filter","child","hasClass","map","panel","i","panelInitialSize","panelSize","style","flexBasis","onResizeStart","event","index","currentTarget","horizontal","getWidth","containerViewChild","getHeight","pageX","changedTouches","pageY","previousElementSibling","nextElementSibling","getOuterWidth","getOuterHeight","addClass","onResize","newPos","newPrevPanelSize","newNextPanelSize","validateResize","resizeEnd","saveState","emit","originalEvent","sizes","removeClass","clear","onGutterMouseDown","bindMouseListeners","onGutterTouchStart","cancelable","bindTouchListeners","preventDefault","onGutterTouchEnd","unbindTouchListeners","document","addEventListener","unbindMouseListeners","removeEventListener","parent","parentElement","getStorage","window","localStorage","sessionStorage","Error","setItem","JSON","stringify","storage","stateString","getItem","parse","containerClass","panelContainerClass","gutterStyle","width","height","ɵfac","ChangeDetectorRef","ElementRef","ɵcmp","NgClass","NgStyle","NgForOf","NgTemplateOutlet","NgIf","type","args","selector","encapsulation","None","changeDetection","OnPush","styleUrls","host","styleClass","panelStyleClass","panelStyle","static","SplitterModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\n\nclass Splitter {\n    constructor(cd, el) {\n        this.cd = cd;\n        this.el = el;\n        this.stateStorage = \"session\";\n        this.stateKey = null;\n        this.layout = \"horizontal\";\n        this.gutterSize = 4;\n        this.panelSizes = [];\n        this.minSizes = [];\n        this.onResizeEnd = new EventEmitter();\n        this.nested = false;\n        this.panels = [];\n        this.dragging = false;\n        this.mouseMoveListener = null;\n        this.mouseUpListener = null;\n        this.touchMoveListener = null;\n        this.touchEndListener = null;\n        this.size = null;\n        this.gutterElement = null;\n        this.startPos = null;\n        this.prevPanelElement = null;\n        this.nextPanelElement = null;\n        this.nextPanelSize = null;\n        this.prevPanelSize = null;\n        this._panelSizes = null;\n        this.prevPanelIndex = null;\n    }\n    ngOnInit() {\n        this.nested = this.isNested();\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'panel':\n                    this.panels.push(item.template);\n                    break;\n                default:\n                    this.panels.push(item.template);\n                    break;\n            }\n        });\n    }\n    ngAfterViewInit() {\n        if (this.panels && this.panels.length) {\n            let initialized = false;\n            if (this.isStateful()) {\n                initialized = this.restoreState();\n            }\n            if (!initialized) {\n                let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n                let _panelSizes = [];\n                this.panels.map((panel, i) => {\n                    let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n                    let panelSize = panelInitialSize || (100 / this.panels.length);\n                    _panelSizes[i] = panelSize;\n                    children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\n                });\n                this._panelSizes = _panelSizes;\n            }\n        }\n    }\n    onResizeStart(event, index) {\n        this.gutterElement = event.currentTarget;\n        this.size = this.horizontal() ? DomHandler.getWidth(this.containerViewChild.nativeElement) : DomHandler.getHeight(this.containerViewChild.nativeElement);\n        this.dragging = true;\n        this.startPos = this.horizontal() ? (event.pageX || event.changedTouches[0].pageX) : (event.pageY || event.changedTouches[0].pageY);\n        this.prevPanelElement = this.gutterElement.previousElementSibling;\n        this.nextPanelElement = this.gutterElement.nextElementSibling;\n        this.prevPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true)) / this.size;\n        this.nextPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true)) / this.size;\n        this.prevPanelIndex = index;\n        DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n    }\n    onResize(event) {\n        let newPos;\n        if (this.horizontal())\n            newPos = (event.pageX * 100 / this.size) - (this.startPos * 100 / this.size);\n        else\n            newPos = (event.pageY * 100 / this.size) - (this.startPos * 100 / this.size);\n        let newPrevPanelSize = this.prevPanelSize + newPos;\n        let newNextPanelSize = this.nextPanelSize - newPos;\n        if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n            this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\n            this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\n            this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n            this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n        }\n    }\n    resizeEnd(event) {\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        this.onResizeEnd.emit({ originalEvent: event, sizes: this._panelSizes });\n        DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n        this.clear();\n    }\n    onGutterMouseDown(event, index) {\n        this.onResizeStart(event, index);\n        this.bindMouseListeners();\n    }\n    onGutterTouchStart(event, index) {\n        if (event.cancelable) {\n            this.onResizeStart(event, index);\n            this.bindTouchListeners();\n            event.preventDefault();\n        }\n    }\n    onGutterTouchEnd(event) {\n        this.resizeEnd(event);\n        this.unbindTouchListeners();\n        if (event.cancelable)\n            event.preventDefault();\n    }\n    validateResize(newPrevPanelSize, newNextPanelSize) {\n        if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n            return false;\n        }\n        if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n            return false;\n        }\n        return true;\n    }\n    bindMouseListeners() {\n        if (!this.mouseMoveListener) {\n            this.mouseMoveListener = event => this.onResize(event);\n            document.addEventListener('mousemove', this.mouseMoveListener);\n        }\n        if (!this.mouseUpListener) {\n            this.mouseUpListener = event => {\n                this.resizeEnd(event);\n                this.unbindMouseListeners();\n            };\n            document.addEventListener('mouseup', this.mouseUpListener);\n        }\n    }\n    bindTouchListeners() {\n        if (!this.touchMoveListener) {\n            this.touchMoveListener = event => this.onResize(event.changedTouches[0]);\n            document.addEventListener('touchmove', this.touchMoveListener);\n        }\n        if (!this.touchEndListener) {\n            this.touchEndListener = event => {\n                this.resizeEnd(event);\n                this.unbindTouchListeners();\n            };\n            document.addEventListener('touchend', this.touchEndListener);\n        }\n    }\n    unbindMouseListeners() {\n        if (this.mouseMoveListener) {\n            document.removeEventListener('mousemove', this.mouseMoveListener);\n            this.mouseMoveListener = null;\n        }\n        if (this.mouseUpListener) {\n            document.removeEventListener('mouseup', this.mouseUpListener);\n            this.mouseUpListener = null;\n        }\n    }\n    unbindTouchListeners() {\n        if (this.touchMoveListener) {\n            document.removeEventListener('touchmove', this.touchMoveListener);\n            this.touchMoveListener = null;\n        }\n        if (this.touchEndListener) {\n            document.removeEventListener('touchend', this.touchEndListener);\n            this.touchEndListener = null;\n        }\n    }\n    clear() {\n        this.dragging = false;\n        this.size = null;\n        this.startPos = null;\n        this.prevPanelElement = null;\n        this.nextPanelElement = null;\n        this.prevPanelSize = null;\n        this.nextPanelSize = null;\n        this.gutterElement = null;\n        this.prevPanelIndex = null;\n    }\n    isNested() {\n        if (this.el.nativeElement) {\n            let parent = this.el.nativeElement.parentElement;\n            while (parent && !DomHandler.hasClass(parent, 'p-splitter')) {\n                parent = parent.parentElement;\n            }\n            return parent !== null;\n        }\n        else {\n            return false;\n        }\n    }\n    isStateful() {\n        return this.stateKey != null;\n    }\n    getStorage() {\n        switch (this.stateStorage) {\n            case 'local':\n                return window.localStorage;\n            case 'session':\n                return window.sessionStorage;\n            default:\n                throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n        }\n    }\n    saveState() {\n        this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\n    }\n    restoreState() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        if (stateString) {\n            this._panelSizes = JSON.parse(stateString);\n            let children = [...this.containerViewChild.nativeElement.children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n            children.forEach((child, i) => {\n                child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\n            });\n            return true;\n        }\n        return false;\n    }\n    containerClass() {\n        return {\n            'p-splitter p-component': true,\n            'p-splitter-horizontal': this.layout === \"horizontal\",\n            'p-splitter-vertical': this.layout === \"vertical\"\n        };\n    }\n    panelContainerClass() {\n        return {\n            'p-splitter-panel': true,\n            'p-splitter-panel-nested': true\n        };\n    }\n    gutterStyle() {\n        if (this.horizontal())\n            return { width: this.gutterSize + 'px' };\n        else\n            return { height: this.gutterSize + 'px' };\n    }\n    horizontal() {\n        return this.layout === 'horizontal';\n    }\n}\nSplitter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: Splitter, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nSplitter.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.4\", type: Splitter, selector: \"p-splitter\", inputs: { styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", style: \"style\", panelStyle: \"panelStyle\", stateStorage: \"stateStorage\", stateKey: \"stateKey\", layout: \"layout\", gutterSize: \"gutterSize\", panelSizes: \"panelSizes\", minSizes: \"minSizes\" }, outputs: { onResizeEnd: \"onResizeEnd\" }, host: { properties: { \"class.p-splitter-panel-nested\": \"nested\" } }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }], ngImport: i0, template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div class=\"p-splitter-gutter\" *ngIf=\"i !== (panels.length - 1)\" [ngStyle]=\"gutterStyle()\"\n                    (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\n                    <div class=\"p-splitter-gutter-handle\"></div>\n                </div>\n            </ng-template>\n        </div>\n    `, isInline: true, styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;-ms-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;-ms-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\"], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: Splitter, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-splitter',\n                    template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div class=\"p-splitter-gutter\" *ngIf=\"i !== (panels.length - 1)\" [ngStyle]=\"gutterStyle()\"\n                    (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\n                    <div class=\"p-splitter-gutter-handle\"></div>\n                </div>\n            </ng-template>\n        </div>\n    `,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styleUrls: ['./splitter.css'],\n                    host: {\n                        '[class.p-splitter-panel-nested]': 'nested'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { styleClass: [{\n                type: Input\n            }], panelStyleClass: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], panelStyle: [{\n                type: Input\n            }], stateStorage: [{\n                type: Input\n            }], stateKey: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], gutterSize: [{\n                type: Input\n            }], panelSizes: [{\n                type: Input\n            }], minSizes: [{\n                type: Input\n            }], onResizeEnd: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container', { static: false }]\n            }] } });\nclass SplitterModule {\n}\nSplitterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: SplitterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSplitterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: SplitterModule, declarations: [Splitter], imports: [CommonModule], exports: [Splitter, SharedModule] });\nSplitterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: SplitterModule, imports: [[CommonModule], SharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: SplitterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Splitter, SharedModule],\n                    declarations: [Splitter]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Splitter, SplitterModule };\n//# sourceMappingURL=primeng-splitter.js.map\n"]},"metadata":{},"sourceType":"module"}